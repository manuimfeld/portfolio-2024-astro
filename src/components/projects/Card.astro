---
interface Props {
  img_src: string;
  title: string;
  description: string;
  technologies: Array<string>;
}

const { technologies, img_src, title, description } = Astro.props;
---

<div
  class="project-container flex flex-col items-start justify-start w-full lg:w-[47.5%] h-fit bg-black/30 backdrop-blur-lg rounded-lg shadow-lg border border-white/20"
>
  <!-- Imagen del proyecto -->
  <img
    src={img_src}
    alt="Imagen del proyecto"
    class="w-full h-48 object-cover rounded-lg mb-4"
  />

  <div class="p-6">
    <!-- Título del proyecto -->
    <h3 class="text-2xl font-semibold text-white mb-2">{title}</h3>

    <!-- Descripción del proyecto -->
    <p class="text-gray-300 mb-4">{description}</p>

    <!-- Lista de tecnologías -->
    <ul class="w-full flex flex-wrap gap-2 justify-start">
      {
        technologies.map((tech) => {
          return (
            <li class="bg-gray-800 text-gray-300 px-3 py-1 rounded-full text-sm">
              {tech}
            </li>
          );
        })
      }
    </ul>

    <ul class="w-full flex flex-wrap gap-2 justify-start mt-4">
      <li>
        <a
          href="#"
          class="bg-[#00ADD2] text-white px-4 py-2 rounded-lg text-sm font-semibold hover:bg-[#0099b0] transition duration-300 ease-in-out"
        >
          Ver en vivo
        </a>
      </li>
      <li>
        <a
          href="#"
          class="bg-[#FF6C39] text-white px-4 py-2 rounded-lg text-sm font-semibold hover:bg-[#e55b29] transition duration-300 ease-in-out"
        >
          Ver repositorio
        </a>
      </li>
    </ul>
  </div>
</div>

<style>
  .project-container {
    overflow: hidden;
  }

  .project-container:hover img {
    transform: scale(1.2);
    transition: 300ms;
  }
</style>
